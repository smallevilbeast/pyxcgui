[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "pybind11>=2.10.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "xcgui"
version = "0.1.8"
description = "xcgui - bundled xcgui for python"
readme = "README.md"
license = "MIT"
authors = [
    {name = "evilbeast", email = "houshao55@gmail.com"}
]
keywords = ["xcgui", "pybind11", "ui"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"

[project.urls]
Homepage = "https://github.com/smallevilbeast/pyxcgui"
Repository = "https://github.com/smallevilbeast/pyxcgui"

[project.optional-dependencies]
dev = [
    "pybind11-stubgen>=2.5.5",
    "build>=0.10.0",
    "twine>=4.0.0",
    "cibuildwheel>=2.16.0",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["xcgui*"]

[tool.setuptools.package-data]
"*" = ["py.typed", "*.pyi"]

[tool.cibuildwheel]
# 构建的 Python 版本（只构建你支持的版本）
build = ["cp39-win_amd64", "cp310-win_amd64", "cp311-win_amd64", "cp312-win_amd64", "cp313-win_amd64"]

# 跳过不需要的构建
skip = ["*-win32", "*-manylinux_i686", "*-musllinux_*", "pp*"]

# 跳过测试，因为需要外部 DLL 依赖
test-skip = "*"

# Windows 特定配置
[tool.cibuildwheel.windows]
# 构建前安装依赖并设置环境变量
before-build = [
    "pip install pybind11>=2.10.0",
    "pip install setuptools>=61.0 wheel",
]

# 配置环境变量，让 cibuildwheel 自动找到 VS
environment = { CIBW_BUILD_VERBOSITY = "1", Py_DEBUG = "0", SETUPTOOLS_USE_DISTUTILS = "stdlib" }